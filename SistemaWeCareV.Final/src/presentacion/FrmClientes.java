/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;
import entidades.WeCare;
import entidades.TipoCliente;
import entidades.Clientes;
import datos.Dt_Clientes;
import datos.Dt_TipoCliente;
import datos.Dt_WeCare;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
//import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author JoseCarlos
 */
public class FrmClientes extends javax.swing.JFrame {

    /**
     * Creates new form FrmClientes
     */
    
    //Declaracion de objetos globales
    //Listas
    private ArrayList<WeCare> listWecare = new ArrayList<WeCare>();
    private ArrayList<TipoCliente> listTipoClientes = new ArrayList<TipoCliente>();
    private ArrayList<Clientes> listClientes = new ArrayList<Clientes>();
    
    //Entidades
    private WeCare wec = new WeCare();
    private TipoCliente tpc = new TipoCliente();
    private Clientes cli = new Clientes();
    
    //Datos
    private Dt_WeCare dtwc = new Dt_WeCare();
    private Dt_TipoCliente dttc = new Dt_TipoCliente();
    private Dt_Clientes dtcli = new Dt_Clientes();
    
    //Declaramos el modelo de datos de la tabla 
    DefaultTableModel myData = new DefaultTableModel();
    
    //Declaramos un filtro de datos para la tabla
    TableRowSorter trsfiltro;
    
    
    
    public FrmClientes() {
        initComponents();
        llenarComboBoxTipo();
        llenarTabla();
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jtf_telefonoConvencional = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtf_telefonoCelular = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtf_correo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtf_NombreCliente = new javax.swing.JTextField();
        jtf_ApellidoCliente = new javax.swing.JTextField();
        jtf_ClienteID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtf_Edad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtf_Sexo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtf_domicilio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jb_Nuevo = new javax.swing.JButton();
        jb_Guardar = new javax.swing.JButton();
        jb_editar = new javax.swing.JButton();
        jb_suprimir = new javax.swing.JButton();
        jtf_cedula = new javax.swing.JTextField();
        jtf_wecareID = new javax.swing.JTextField();
        jcb_tipoClienteID = new javax.swing.JComboBox<>();
        btnMostrarID = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jtf_estado = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jtf_buscar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbl_Clientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("WeCare - Clientes");
        setName("frmClientes"); // NOI18N
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(230, 235, 240));
        jPanel2.setPreferredSize(new java.awt.Dimension(1268, 630));

        jPanel1.setBackground(new java.awt.Color(27, 154, 170));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestión de Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto Black", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Teléfono Celular:");

        jtf_telefonoConvencional.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Cédula:");

        jtf_telefonoCelular.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Correo Electrónico:");

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Estado:");

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("TipoCliente:");

        jtf_correo.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_correo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_correoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("WeCare_ID:");

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Edad:");

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Sexo:");

        jtf_NombreCliente.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_NombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_NombreClienteKeyTyped(evt);
            }
        });

        jtf_ApellidoCliente.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_ApellidoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_ApellidoClienteKeyTyped(evt);
            }
        });

        jtf_ClienteID.setEditable(false);
        jtf_ClienteID.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_ClienteID.setFocusable(false);
        jtf_ClienteID.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cliente_ID:");

        jtf_Edad.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");

        jtf_Sexo.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Apellido:");

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Domicilio:");

        jtf_domicilio.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_domicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_domicilioKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Teléfono Convecional:");

        jb_Nuevo.setBackground(new java.awt.Color(255, 102, 51));
        jb_Nuevo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jb_Nuevo.setForeground(new java.awt.Color(255, 255, 255));
        jb_Nuevo.setText("Nuevo");
        jb_Nuevo.setPreferredSize(new java.awt.Dimension(90, 30));
        jb_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_NuevoActionPerformed(evt);
            }
        });

        jb_Guardar.setBackground(new java.awt.Color(255, 102, 51));
        jb_Guardar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jb_Guardar.setForeground(new java.awt.Color(255, 255, 255));
        jb_Guardar.setText("Guardar");
        jb_Guardar.setPreferredSize(new java.awt.Dimension(90, 30));
        jb_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_GuardarActionPerformed(evt);
            }
        });

        jb_editar.setBackground(new java.awt.Color(255, 102, 51));
        jb_editar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jb_editar.setForeground(new java.awt.Color(255, 255, 255));
        jb_editar.setText("Editar");
        jb_editar.setPreferredSize(new java.awt.Dimension(90, 30));
        jb_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_editarActionPerformed(evt);
            }
        });

        jb_suprimir.setBackground(new java.awt.Color(255, 102, 51));
        jb_suprimir.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jb_suprimir.setForeground(new java.awt.Color(255, 255, 255));
        jb_suprimir.setText("Suprimir");
        jb_suprimir.setPreferredSize(new java.awt.Dimension(90, 30));
        jb_suprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_suprimirActionPerformed(evt);
            }
        });

        jtf_cedula.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_cedulaKeyTyped(evt);
            }
        });

        jtf_wecareID.setEditable(false);
        jtf_wecareID.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_wecareID.setFocusable(false);
        jtf_wecareID.setRequestFocusEnabled(false);

        jcb_tipoClienteID.setBackground(new java.awt.Color(255, 102, 51));
        jcb_tipoClienteID.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jcb_tipoClienteID.setForeground(new java.awt.Color(255, 255, 255));
        jcb_tipoClienteID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        btnMostrarID.setBackground(new java.awt.Color(255, 102, 51));
        btnMostrarID.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnMostrarID.setForeground(new java.awt.Color(255, 255, 255));
        btnMostrarID.setText("...");
        btnMostrarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarIDActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jtf_estado.setEditable(false);
        jtf_estado.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_estado.setFocusable(false);
        jtf_estado.setRequestFocusEnabled(false);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_ClienteID, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcb_tipoClienteID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarID)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtf_NombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtf_ApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtf_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtf_Sexo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(104, 104, 104))
                    .addComponent(jtf_correo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtf_wecareID, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(jtf_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtf_domicilio)
                            .addComponent(jtf_telefonoCelular)
                            .addComponent(jtf_telefonoConvencional))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_Nuevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_Guardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_editar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_suprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jb_Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jb_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jb_editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jb_suprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel13)
                                    .addComponent(jtf_ClienteID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jtf_wecareID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcb_tipoClienteID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMostrarID)
                                    .addComponent(jtf_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(jtf_domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jtf_NombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jtf_ApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jtf_telefonoConvencional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10)
                                            .addComponent(jtf_telefonoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel12)
                                            .addComponent(jtf_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(jtf_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11)
                                            .addComponent(jtf_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jtf_Sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))))))
                        .addGap(0, 17, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2))
                .addContainerGap())
        );

        jLabel14.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel14.setText("Buscar:");

        jtf_buscar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_buscarKeyTyped(evt);
            }
        });

        jtbl_Clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "clienteID", "tipoclienteID", "wecareID", "nombreCliente", "apellidoCliente", "edad", "sexo", "domicilio", "telefonoConvencional", "telefonoCelular", "correo", "cedula", "estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbl_Clientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_ClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbl_Clientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtf_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 1123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1289, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //Métodos
    private void jtf_buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_buscarKeyTyped
        /*
            Java KeyListener is an interface used in Java Swing 
            to monitor keyboard-related events that take place in your applications
            
            The class KeyAdapter is an abstract (adapter) class 
            for receiving keyboard events. All methods of this class are empty.
        */
        
        jtf_buscar.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_buscar.getText()).toUpperCase();
                jtf_buscar.setText(cadena);
                repaint();
                filtrarTabla();
            }
        });
        trsfiltro = new TableRowSorter(jtbl_Clientes.getModel());
        jtbl_Clientes.setRowSorter(trsfiltro);    
    }//GEN-LAST:event_jtf_buscarKeyTyped

    private void jtbl_ClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_ClientesMouseClicked
        //Obtenemos la fila seleccionada
        int fila = jtbl_Clientes.getSelectedRow();
        int idTC = 0; //guarda el id de TipoCliente que se obtiene de la tabla
        int size = 0; //Guarda la cantidad de elementos que hay en el jcombobx de TipoCliente
        int pos = 0; //variable de control para recorrer las posiciones de los elementos en el jcombobox
        
        //Asignamos los valores a los campos del formulario
        jtf_ClienteID.setText(jtbl_Clientes.getValueAt(fila, 0).toString());
        
        //Obtenemos el id de TipoCliente del jtable
        idTC = Integer.parseInt(this.jtbl_Clientes.getValueAt(fila, 1).toString());
        System.out.println("idTC: "+idTC);
  
        size = this.jcb_tipoClienteID.getItemCount(); //Obtenemos la cantidad de elementos contenidos en el jcombobox
        System.out.println("size: "+size);
        do{
            pos++;
            //tpc = (TipoCliente)this.jcb_tipoClienteID.getSelectedItem();
            tpc = (TipoCliente)this.jcb_tipoClienteID.getItemAt(pos);
            
            if(tpc.getTipoclienteID() == idTC){
                //Selecciono el objeto del jcombobox
                this.jcb_tipoClienteID.setSelectedIndex(pos);
                System.out.println("pos: "+pos);
                break;
            }
            
        }
        while(pos<=size);
        
        //Continuamos asignando los valores a los campos del formulario
        jtf_wecareID.setText(jtbl_Clientes.getValueAt(fila, 2).toString());
        jtf_NombreCliente.setText(jtbl_Clientes.getValueAt(fila, 3).toString());
        jtf_ApellidoCliente.setText(jtbl_Clientes.getValueAt(fila, 4).toString());
        jtf_Edad.setText(jtbl_Clientes.getValueAt(fila, 5).toString());
        jtf_Sexo.setText(jtbl_Clientes.getValueAt(fila, 6).toString());
        jtf_domicilio.setText(jtbl_Clientes.getValueAt(fila, 7).toString());
        jtf_telefonoConvencional.setText(jtbl_Clientes.getValueAt(fila, 8).toString());
        jtf_telefonoCelular.setText(jtbl_Clientes.getValueAt(fila, 9).toString());
        jtf_correo.setText(jtbl_Clientes.getValueAt(fila, 10).toString());
        jtf_cedula.setText(jtbl_Clientes.getValueAt(fila, 11).toString());
        jtf_estado.setText(jtbl_Clientes.getValueAt(fila, 12).toString());
    }//GEN-LAST:event_jtbl_ClientesMouseClicked

    private void jb_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_NuevoActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_jb_NuevoActionPerformed

    private void jb_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_GuardarActionPerformed
        //Validamos que todos los campos sean ingresados por el usuario   
  
        if(jcb_tipoClienteID.getSelectedIndex()==0 || jtf_wecareID.getText().equals("") || jtf_NombreCliente.getText().equals("") || jtf_ApellidoCliente.getText().equals("") || jtf_Edad.getText().equals("") ||  
            jtf_Sexo.getText().equals("") || jtf_domicilio.getText().equals("") || jtf_telefonoConvencional.getText().equals("") ||  
            jtf_telefonoCelular.getText().equals("") ||  jtf_correo.getText().equals("") || jtf_cedula.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //Construimos nuestro objeto con los valores del formulario
            //No se agrega el setClienteID porque ese ID ya se lo asigna automaticamente la base de datos
            tpc = (TipoCliente)this.jcb_tipoClienteID.getItemAt(this.jcb_tipoClienteID.getSelectedIndex());
            cli.setTipoclienteID(tpc.getTipoclienteID());
            cli.setWecareID(Integer.parseInt(jtf_wecareID.getText()));
            cli.setNombreCliente(jtf_NombreCliente.getText());
            cli.setApellidoCliente(jtf_ApellidoCliente.getText());
            cli.setEdad(Integer.parseInt(jtf_Edad.getText()));
            cli.setSexo(Integer.parseInt(jtf_Sexo.getText()));
            cli.setDomicilio(jtf_domicilio.getText());
            cli.setTelefonoConvencional(jtf_telefonoConvencional.getText());
            cli.setTelefonoCelular(jtf_telefonoCelular.getText());
            cli.setCorreo(jtf_correo.getText());
            cli.setCedula(jtf_cedula.getText());
            cli.setEstado(1);
            
        
            //Validamos que el nombre y apellido del cliente no exista en la tabla de la bd
            if(dtcli.existeCliente(cli)){
                JOptionPane.showMessageDialog(this, "El nombre y apellido del cliente ya existe!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
                jtf_ClienteID.setText("");
                jtf_ClienteID.grabFocus(); 
            }
            else{
                //Validamos que el metodo guardar devuelve un true
                if(dtcli.guardarCliente(cli)){
                    JOptionPane.showMessageDialog (this, "El registro fue almacenado con éxito!", 
                      "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                    actualizarTabla();
                    limpiarCampos();
                }
                else{
                   JOptionPane.showMessageDialog(this, 
                      "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.", 
                      "ERROR", JOptionPane.ERROR_MESSAGE); 
                }
            }
        }
    }//GEN-LAST:event_jb_GuardarActionPerformed

    private void btnMostrarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarIDActionPerformed
        tpc = (TipoCliente)this.jcb_tipoClienteID.getSelectedItem();
        JOptionPane.showMessageDialog(null, "ID:  "+tpc.getTipoclienteID());
    }//GEN-LAST:event_btnMostrarIDActionPerformed

    private void jb_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_editarActionPerformed
        //Validamos que todos los campos sean ingresados por el usuario   
         
        if(jtf_ClienteID.getText().equals("") || jcb_tipoClienteID.getSelectedIndex()==0 || jtf_wecareID.getText().equals("") || jtf_NombreCliente.getText().equals("") || jtf_ApellidoCliente.getText().equals("") || jtf_Edad.getText().equals("") ||  
            jtf_Sexo.getText().equals("") || jtf_domicilio.getText().equals("") || jtf_telefonoConvencional.getText().equals("") ||  
            jtf_telefonoCelular.getText().equals("") ||  jtf_correo.getText().equals("") || jtf_cedula.getText().equals("") || jtf_estado.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //Construimos nuestro objeto con los valores del formulario
            cli.setClienteID(Integer.parseInt(jtf_ClienteID.getText()));
            tpc = (TipoCliente)this.jcb_tipoClienteID.getItemAt(this.jcb_tipoClienteID.getSelectedIndex());
            cli.setTipoclienteID(tpc.getTipoclienteID());
            cli.setWecareID(Integer.parseInt(jtf_wecareID.getText()));
            cli.setNombreCliente(jtf_NombreCliente.getText());
            cli.setApellidoCliente(jtf_ApellidoCliente.getText());
            cli.setEdad(Integer.parseInt(jtf_Edad.getText()));
            cli.setSexo(Integer.parseInt(jtf_Sexo.getText()));
            cli.setDomicilio(jtf_domicilio.getText());
            cli.setTelefonoConvencional(jtf_telefonoConvencional.getText());
            cli.setTelefonoCelular(jtf_telefonoCelular.getText());
            cli.setCorreo(jtf_correo.getText());
            cli.setCedula(jtf_cedula.getText());
            cli.setEstado(2);

            //Validamos que el metodo actualizar devuelve un true
            if(dtcli.editarCliente(cli)){
                JOptionPane.showMessageDialog (this, "El registro fue actualizado con éxito!", 
                  "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();
            }
            else{
               JOptionPane.showMessageDialog(this, 
                  "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.", 
                  "ERROR", JOptionPane.ERROR_MESSAGE); 
            }
        }   
    }//GEN-LAST:event_jb_editarActionPerformed

    private void jb_suprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_suprimirActionPerformed
        //Validamos que todos los campos sean ingresados por el usuario   
         
        if(jtf_ClienteID.getText().equals("") || jcb_tipoClienteID.getSelectedIndex()==0 || jtf_wecareID.getText().equals("") || jtf_NombreCliente.getText().equals("") || jtf_ApellidoCliente.getText().equals("") || jtf_Edad.getText().equals("") ||  
            jtf_Sexo.getText().equals("") || jtf_domicilio.getText().equals("") || jtf_telefonoConvencional.getText().equals("") ||  
            jtf_telefonoCelular.getText().equals("") ||  jtf_correo.getText().equals("") || jtf_cedula.getText().equals("") || jtf_estado.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //Construimos nuestro objeto con los valores del formulario
            cli.setClienteID(Integer.parseInt(jtf_ClienteID.getText()));
            tpc = (TipoCliente)this.jcb_tipoClienteID.getItemAt(this.jcb_tipoClienteID.getSelectedIndex());
            cli.setTipoclienteID(tpc.getTipoclienteID());
            cli.setWecareID(Integer.parseInt(jtf_wecareID.getText()));
            cli.setNombreCliente(jtf_NombreCliente.getText());
            cli.setApellidoCliente(jtf_ApellidoCliente.getText());
            cli.setEdad(Integer.parseInt(jtf_Edad.getText()));
            cli.setSexo(Integer.parseInt(jtf_Sexo.getText()));
            cli.setDomicilio(jtf_domicilio.getText());
            cli.setTelefonoConvencional(jtf_telefonoConvencional.getText());
            cli.setTelefonoCelular(jtf_telefonoCelular.getText());
            cli.setCorreo(jtf_correo.getText());
            cli.setCedula(jtf_cedula.getText());
            cli.setEstado(Integer.parseInt(jtf_estado.getText()));

            //Validamos que el metodo actualizar devuelve un true
            if(dtcli.deleteCliente(cli)){
                JOptionPane.showMessageDialog (this, "El registro fue actualizado con éxito!", 
                  "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();
            }
            else{
               JOptionPane.showMessageDialog(this, 
                  "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.", 
                  "ERROR", JOptionPane.ERROR_MESSAGE); 
            }
        }   
    }//GEN-LAST:event_jb_suprimirActionPerformed

    private void jtf_NombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_NombreClienteKeyTyped
        jtf_NombreCliente.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_NombreCliente.getText()).toUpperCase();
                jtf_NombreCliente.setText(cadena);
                repaint();
            }
        });
    }//GEN-LAST:event_jtf_NombreClienteKeyTyped

    private void jtf_ApellidoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_ApellidoClienteKeyTyped
        jtf_ApellidoCliente.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_ApellidoCliente.getText()).toUpperCase();
                jtf_ApellidoCliente.setText(cadena);
                repaint();
            }
        });
    }//GEN-LAST:event_jtf_ApellidoClienteKeyTyped

    private void jtf_cedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_cedulaKeyTyped
        jtf_cedula.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_cedula.getText()).toUpperCase();
                jtf_cedula.setText(cadena);
                repaint();
            }
        });
    }//GEN-LAST:event_jtf_cedulaKeyTyped

    private void jtf_domicilioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_domicilioKeyTyped
        jtf_domicilio.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_domicilio.getText()).toUpperCase();
                jtf_domicilio.setText(cadena);
                repaint();
            }
        });
    }//GEN-LAST:event_jtf_domicilioKeyTyped

    private void jtf_correoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_correoKeyTyped
        jtf_correo.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_correo.getText()).toLowerCase();
                jtf_correo.setText(cadena);
                repaint();
            }
        });
    }//GEN-LAST:event_jtf_correoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmClientes().setVisible(true);
            }
        });
    }
    
    //Métodos
    
    private void llenarComboBoxTipo(){
        //Llenamos la lista
        listTipoClientes = dttc.listarTipoCliente();
        //Recorremos cada elemento de la lista y creamos el objeto
        for(TipoCliente tc: listTipoClientes){
            //Asignamos el objeto creado al combobox
            this.jcb_tipoClienteID.addItem(tc);   
        }
     
    }
    
    private void actualizarTabla(){
        myData.setColumnCount(0);
        myData.setRowCount(0);
        this.llenarTabla();
    }
    
    private void llenarTabla(){        
        //llenamos la lista
        listClientes = dtcli.listarClientes();
        
        //creamos un arraylist con las columnas del modelo
        ArrayList<Object> listNombreColumnas = new ArrayList<Object>();
        listNombreColumnas.add("clienteID");
        listNombreColumnas.add("tipoclienteID");
        listNombreColumnas.add("wecareID");
        listNombreColumnas.add("nombreCliente");
        listNombreColumnas.add("apellidoCliente");
        listNombreColumnas.add("edad");
        listNombreColumnas.add("sexo");
        listNombreColumnas.add("domicilio");
        listNombreColumnas.add("telefonoConvencional");
        listNombreColumnas.add("telefonoCelular");
        listNombreColumnas.add("correo");
        listNombreColumnas.add("cedula");
        listNombreColumnas.add("estado");
        
        //recorremos cada elemento del arraylist y creamos un objeto
        for(Object column : listNombreColumnas){
            //asignamos las columnas al modelo
            myData.addColumn(column);
        }
        
       //recorremos cada elemento de la lista y creamos el objeto
        for(Clientes cliente: listClientes){
            Object[] dtclientes = new Object[]{cliente.getClienteID(), cliente.getTipoclienteID(), cliente.getWecareID(), cliente.getNombreCliente(),
            cliente.getApellidoCliente(), cliente.getEdad(), cliente.getSexo(), cliente.getDomicilio(), cliente.getTelefonoConvencional(),
            cliente.getTelefonoCelular(), cliente.getCorreo(), cliente.getCedula(), cliente.getEstado()};
            //asignamos un arreglo de objetos a una fila del modelo
            myData.addRow(dtclientes);
        }
        //Asignamos el modelo y/o coleccion de datos a la tabla
        jtbl_Clientes.setModel(myData);
    }
    
    private void limpiarCampos(){
        this.jtf_ClienteID.setText("");
        this.jcb_tipoClienteID.setSelectedIndex(0);
        
        //Cargamos la lista con los elementos de la tabla de la base de datos
        listWecare = dtwc.listarWeCare();
        
        //Recorró la lista para obtener el valor de WeCare_ID de la tabla para dejarlo fijo dentro del formulario ya que es un ID que no se modifica
        for (WeCare wec : listWecare) {
            this.jtf_wecareID.setText(Integer.toString(wec.getWecareID()));
        }
        
        this.jtf_NombreCliente.setText("");
        this.jtf_ApellidoCliente.setText("");
        this.jtf_Edad.setText("");
        this.jtf_Sexo.setText("");
        this.jtf_domicilio.setText("");
        this.jtf_telefonoConvencional.setText("");
        this.jtf_telefonoCelular.setText("");
        this.jtf_correo.setText("");
        this.jtf_cedula.setText("");
        this.jtf_estado.setText("");
        
    }
    
    private void filtrarTabla(){
       trsfiltro.setRowFilter(RowFilter.regexFilter(jtf_buscar.getText(), 3));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMostrarID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jb_Guardar;
    private javax.swing.JButton jb_Nuevo;
    private javax.swing.JButton jb_editar;
    private javax.swing.JButton jb_suprimir;
    private javax.swing.JComboBox<Object> jcb_tipoClienteID;
    private javax.swing.JTable jtbl_Clientes;
    private javax.swing.JTextField jtf_ApellidoCliente;
    private javax.swing.JTextField jtf_ClienteID;
    private javax.swing.JTextField jtf_Edad;
    private javax.swing.JTextField jtf_NombreCliente;
    private javax.swing.JTextField jtf_Sexo;
    private javax.swing.JTextField jtf_buscar;
    private javax.swing.JTextField jtf_cedula;
    private javax.swing.JTextField jtf_correo;
    private javax.swing.JTextField jtf_domicilio;
    private javax.swing.JTextField jtf_estado;
    private javax.swing.JTextField jtf_telefonoCelular;
    private javax.swing.JTextField jtf_telefonoConvencional;
    private javax.swing.JTextField jtf_wecareID;
    // End of variables declaration//GEN-END:variables
}
