/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;
import entidades.Inventario;
import datos.Dt_Inventario;
import entidades.Bodega;
import datos.Dt_Bodega;
import entidades.Producto;
import datos.Dt_Producto;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
 

/**
 *
 * @author Maria Regina
 */
public class FrmInventario extends javax.swing.JFrame {

    /**
     * Creates new form Inventario
     */
    // add dt + entidad + arraylist para producto
    private Inventario inv = new Inventario();
    private Dt_Inventario dtinv = new Dt_Inventario();
    private ArrayList<Inventario> listInventario = new ArrayList<Inventario>();
    
    private Bodega bid = new Bodega();
    private Dt_Bodega dtbid = new Dt_Bodega();
    private ArrayList<Bodega> listbodid = new ArrayList<Bodega>();
    
    private Producto pid = new Producto();
    private Dt_Producto dtpid = new Dt_Producto();
    private ArrayList<Producto> listpid = new ArrayList<Producto>();
    
    DefaultTableModel myData = new DefaultTableModel();
    TableRowSorter trsfiltro;
    
    
    public FrmInventario() {
        
        initComponents();
        llenarComboBodega();
        fillProducto();
        llenarTablaInventario();
        limpiarCampos();        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtf_fecha = new javax.swing.JTextField();
        jtf_cantinicial = new javax.swing.JTextField();
        jtf_movneg = new javax.swing.JTextField();
        jtf_movpos = new javax.swing.JTextField();
        jtf_numdocs = new javax.swing.JTextField();
        bnuevo = new javax.swing.JButton();
        bguardar = new javax.swing.JButton();
        beditar = new javax.swing.JButton();
        bsuprimir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtf_saldo = new javax.swing.JTextField();
        jtf_inventarioid = new javax.swing.JTextField();
        cbProducto = new javax.swing.JComboBox<>();
        cbBodega = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablainv = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jtf_buscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion del Inventario");
        setBackground(new java.awt.Color(230, 235, 240));
        setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(27, 154, 170));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gesti√≥n del Inventario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto Black", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Inventario_ID:");

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Bodega_ID:");

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cantidad inicial:");

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Movimientos positivos:");

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Movimientos negativos:");

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Saldo final:");

        jtf_fecha.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jtf_cantinicial.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jtf_movneg.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jtf_movpos.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jtf_numdocs.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        bnuevo.setBackground(new java.awt.Color(255, 120, 51));
        bnuevo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        bnuevo.setForeground(new java.awt.Color(255, 255, 255));
        bnuevo.setText("Nuevo");
        bnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnuevoActionPerformed(evt);
            }
        });

        bguardar.setBackground(new java.awt.Color(255, 120, 51));
        bguardar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        bguardar.setForeground(new java.awt.Color(255, 255, 255));
        bguardar.setText("Guardar");
        bguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bguardarActionPerformed(evt);
            }
        });

        beditar.setBackground(new java.awt.Color(255, 120, 51));
        beditar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        beditar.setForeground(new java.awt.Color(255, 255, 255));
        beditar.setText("Editar");
        beditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditarActionPerformed(evt);
            }
        });

        bsuprimir.setBackground(new java.awt.Color(255, 120, 51));
        bsuprimir.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        bsuprimir.setForeground(new java.awt.Color(255, 255, 255));
        bsuprimir.setText("Suprimir");
        bsuprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsuprimirActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Numeros documento:");

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Producto_ID:");

        jtf_saldo.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jtf_inventarioid.setEditable(false);
        jtf_inventarioid.setBackground(new java.awt.Color(255, 255, 255));
        jtf_inventarioid.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_inventarioid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_inventarioidActionPerformed(evt);
            }
        });

        cbProducto.setBackground(new java.awt.Color(255, 102, 51));
        cbProducto.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cbProducto.setForeground(new java.awt.Color(255, 255, 255));
        cbProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        cbBodega.setBackground(new java.awt.Color(255, 102, 51));
        cbBodega.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cbBodega.setForeground(new java.awt.Color(255, 255, 255));
        cbBodega.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_inventarioid, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbBodega, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_cantinicial, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_movpos, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .addComponent(jtf_fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_numdocs, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_movneg, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bsuprimir, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(beditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bnuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel5)
                    .addComponent(jtf_movpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jtf_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_cantinicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_movneg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jtf_inventarioid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtf_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jtf_numdocs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(bnuevo)
                        .addGap(18, 18, 18)
                        .addComponent(bguardar)
                        .addGap(18, 18, 18)
                        .addComponent(beditar)))
                .addGap(18, 18, 18)
                .addComponent(bsuprimir)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jtablainv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "inventario_ID", "bodega_ID", "productoID", "cantidadInicial", "fecha", "movimientosPositivos", "movimientosNegativos", "numerosDocumento", "saldoFinal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtablainv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtablainvMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtablainv);

        jLabel10.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel10.setText("Buscar: ");

        jtf_buscar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jtf_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_buscarActionPerformed(evt);
            }
        });
        jtf_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_buscarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 1057, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bguardarActionPerformed
        // TODO add your handling code here:
        
        
        // TODO add your handling code here:
        //validamos que todos los campos sean ingresados por el usuario      || jtf_nombre.getText().equals("")
        if(cbBodega.getSelectedIndex()==0|| cbProducto.getSelectedIndex()==0|| jtf_fecha.getText().equals("") || jtf_cantinicial.getText().equals("")||jtf_movpos.getText().equals("")||  jtf_movneg.getText().equals("")|| jtf_numdocs.getText().equals("")|| jtf_saldo.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //construimos nuestro objeto con los valores del formulario
            bid = (Bodega)this.cbBodega.getItemAt(this.cbBodega.getSelectedIndex());
            inv.setBodegaID(bid.getBodegaID());
            pid = (Producto)this.cbProducto.getItemAt(this.cbProducto.getSelectedIndex());
            inv.setProductoID(pid.getProductoID());
            inv.setCantidadInicial(Integer.parseInt(jtf_cantinicial.getText()));
            inv.setFecha(jtf_fecha.getText());
            inv.setMovimientosPositivos(Integer.parseInt(jtf_movpos.getText()));
            inv.setMovimientosNegativos(Integer.parseInt(jtf_movneg.getText()));            
            inv.setNumerosDocumento(jtf_numdocs.getText());
            inv.setSaldoFinal(Integer.parseInt(jtf_saldo.getText()));
            
           
            //validamos que el id no exista en la tabla de la bd
            if(dtinv.existeInventario(inv)){//*************************************************************************************
                JOptionPane.showMessageDialog(this, "el inventario que intenta ingresar ya existe!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
                jtf_inventarioid.setText("");
                jtf_inventarioid.grabFocus(); 
            }
            else{
                //validamos que el metodo guardar devuelve un true
                if(dtinv.guardarInventario(inv)){//****************************************************************
                    JOptionPane.showMessageDialog (this, "El registro fue almacenado con √©xito!", 
                      "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                    actualizarTabla();
                    limpiarCampos();
                }
                else{
                   JOptionPane.showMessageDialog(this, 
                      "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.", 
                      "ERROR", JOptionPane.ERROR_MESSAGE); 
                }
            }
        }       
    }//GEN-LAST:event_bguardarActionPerformed

    private void bnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnuevoActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        
    }//GEN-LAST:event_bnuevoActionPerformed

    private void beditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditarActionPerformed
        // TODO add your handling code here:
        
        //validamos que todos los campos sean ingresados por el usuario      
        if(cbBodega.getSelectedIndex()==0|| jtf_inventarioid.getText().equals("")||cbProducto.getSelectedIndex()==0|| jtf_fecha.getText().equals("") || jtf_movneg.getText().equals("")|| jtf_cantinicial.getText().equals("")|| jtf_movpos.getText().equals("")|| jtf_numdocs.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //construimos nuestro objeto con los valores del formulario
            bid = (Bodega)this.cbBodega.getItemAt(this.cbBodega.getSelectedIndex());
            inv.setBodegaID(bid.getBodegaID());
            inv.setInventarioID(Integer.parseInt(jtf_inventarioid.getText()));
            pid = (Producto)this.cbProducto.getItemAt(this.cbProducto.getSelectedIndex());
            inv.setProductoID(pid.getProductoID());
            inv.setCantidadInicial(Integer.parseInt(jtf_cantinicial.getText()));
            inv.setFecha(jtf_fecha.getText());
            inv.setMovimientosPositivos(Integer.parseInt(jtf_movpos.getText()));
            inv.setMovimientosNegativos(Integer.parseInt(jtf_movneg.getText()));            
            inv.setNumerosDocumento(jtf_numdocs.getText());
            inv.setSaldoFinal(Integer.parseInt(jtf_saldo.getText()));            
            
            
                       
            //validamos que el metodo actualizar devuelve un true
            if(dtinv.editarInventario(inv)){//**************************************************************************************
                JOptionPane.showMessageDialog (this, "El registro fue actualizado con √©xito!", 
                  "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();
            }
            else{
               JOptionPane.showMessageDialog(this, 
                  "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.", 
                  "ERROR", JOptionPane.ERROR_MESSAGE); 
            }
        }        
    }//GEN-LAST:event_beditarActionPerformed

    private void bsuprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsuprimirActionPerformed
        // TODO add your handling code here:
        //validamos que todos los campos sean ingresados por el usuario      
        if(cbBodega.getSelectedIndex()==0|| jtf_inventarioid.getText().equals("")||cbProducto.getSelectedIndex()==0|| jtf_fecha.getText().equals("") || jtf_movneg.getText().equals("")|| jtf_cantinicial.getText().equals("")|| jtf_movpos.getText().equals("")|| jtf_numdocs.getText().equals("")) {

            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!", 
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //construimos nuestro objeto con los valores del formulario
            inv.setInventarioID(Integer.parseInt(jtf_inventarioid.getText()));
            
            bid = (Bodega)this.cbBodega.getItemAt(this.cbBodega.getSelectedIndex());
            inv.setBodegaID(bid.getBodegaID());
            pid = (Producto)this.cbProducto.getItemAt(this.cbProducto.getSelectedIndex());
            inv.setProductoID(pid.getProductoID());
            inv.setCantidadInicial(Integer.parseInt(jtf_cantinicial.getText()));
            inv.setFecha(jtf_fecha.getText());
            inv.setMovimientosPositivos(Integer.parseInt(jtf_movpos.getText()));
            inv.setMovimientosNegativos(Integer.parseInt(jtf_movneg.getText()));            
            inv.setNumerosDocumento(jtf_numdocs.getText());
            inv.setSaldoFinal(Integer.parseInt(jtf_saldo.getText()));            
                        
            
            //validamos que el metodo delete devuelve un true
            if(dtinv.deleteInventario(inv)){//***************************************************************************
                JOptionPane.showMessageDialog (this, "El registro fue eliminado con √©xito!", 
                  "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();
            }
            else{
               JOptionPane.showMessageDialog(this, 
                  "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.", 
                  "ERROR", JOptionPane.ERROR_MESSAGE); 
            }
        }   
                
    }//GEN-LAST:event_bsuprimirActionPerformed

    private void jtf_buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_buscarKeyTyped
        // TODO add your handling code here:

        jtf_buscar.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_buscar.getText()).toUpperCase();
                jtf_buscar.setText(cadena);
                repaint();
                filtrarTabla();
            }
        });
        trsfiltro = new TableRowSorter(jtablainv.getModel());
        jtablainv.setRowSorter(trsfiltro);           
  

    }//GEN-LAST:event_jtf_buscarKeyTyped

    private void jtablainvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtablainvMouseClicked
        // TODO add your handling code here:

               //obtenemos la fila seleccionada
        int fila = jtablainv.getSelectedRow();
        
        //Obtenemos la fila seleccionada
        int idTB = 0; //guarda el id que se obtiene de la tabla
        int size = 0; //Guarda la cantidad de elementos que hay en el jcombobx 
        int pos = 0; //variable de control para recorrer las posiciones de los elementos
        
        //Asignamos los valores a los campos del formulario
        jtf_inventarioid.setText(jtablainv.getValueAt(fila, 0).toString());
        
        idTB = Integer.parseInt(this.jtablainv.getValueAt(fila, 1).toString());
        System.out.println("idTB: "+idTB);
  
        size = this.cbBodega.getItemCount(); //Obtenemos la cantidad de elementos contenidos en el jcombobox
        System.out.println("size: "+size);
        do{
            pos++;
            bid = (Bodega)this.cbBodega.getItemAt(pos);
            
            if(bid.getBodegaID() == idTB){
                //Selecciono el objeto del jcombobox
                this.cbBodega.setSelectedIndex(pos);
                System.out.println("pos: "+pos);
                break;
            }
            
        }
        while(pos<=size);
        
        combop();
        
        //Obtenemos la fila seleccionada
        /*int size = 0; //Guarda la cantidad de elementos que hay en el jcombobx 
        int pos = 0;
        int idP = 0; 
        
        //Asignamos los valores a los campos del formulario
        
        //Obtenemos el id  del jtable
        idP = Integer.parseInt(this.jtablainv.getValueAt(fila, 2).toString());
        System.out.println("idP: "+idP);
  
        size = this.cbProducto.getItemCount(); //Obtenemos la cantidad de elementos contenidos en el jcombobox
        System.out.println("size: "+size);
        do{
            pos++;
            //tpc = (TipoCliente)this.jcb_tipoClienteID.getSelectedItem();
            pid = (Producto)this.cbProducto.getItemAt(pos);
            
            if(pid.getProductoID() == idP){
                //Selecciono el objeto del jcombobox
                this.cbProducto.setSelectedIndex(pos);
                System.out.println("pos: "+pos);
                break;
            }
            
        }
        while(pos<=size);*/
        

//asignamos los valores a los campos del formulario
        
        jtf_cantinicial.setText(jtablainv.getValueAt(fila, 3).toString());
        jtf_fecha.setText(jtablainv.getValueAt(fila, 4).toString());
        jtf_movpos.setText(jtablainv.getValueAt(fila, 5).toString());
        jtf_movneg.setText(jtablainv.getValueAt(fila, 6).toString());
        jtf_numdocs.setText(jtablainv.getValueAt(fila, 7).toString());   
        jtf_saldo.setText(jtablainv.getValueAt(fila, 8).toString());        

    }//GEN-LAST:event_jtablainvMouseClicked

    private void jtf_inventarioidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_inventarioidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_inventarioidActionPerformed

    private void jtf_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmInventario().setVisible(true);
            }
        });
    }
    
    //METODOS
    
    //LLENAR COMBO BODEGA
    
    private void llenarComboBodega(){
        
        
        listbodid = dtbid.listarBodega();
        
        for(Bodega g: listbodid){
            //llenar el combobox con los objetos de la lista
            this.cbBodega.addItem(g);
            //this.jcb_locations.addItem(l.toString());
    }
        }
    
    private void actualizarTabla(){
        myData.setColumnCount(0);
        myData.setRowCount(0);
        this.llenarTablaInventario();
    }    
        
     

    
    private void llenarTablaInventario()
    {
         //llenamos la lista
        listInventario = dtinv.listarInventario();
        
        //creamos un arraylist con las columnas del modelo
        ArrayList<Object> listNombreColumnas = new ArrayList<Object>();
        listNombreColumnas.add("inventarioID");
        listNombreColumnas.add("bodegaID");
        listNombreColumnas.add("productoID");       
        listNombreColumnas.add("cantidadInicial");
        listNombreColumnas.add("fecha");
        listNombreColumnas.add("movimientosPositivos");
        listNombreColumnas.add("movimientosNegativos");
        listNombreColumnas.add("numerosDocumento");
        listNombreColumnas.add("saldoFinal");        
        
        //recorremos cada elemento del arraylist y creamos un objeto
        for(Object column : listNombreColumnas){
            //asignamos las columnas al modelo
            myData.addColumn(column);
        }
        
       //recorremos cada elemento de la lista y creamos el objeto
        for(Inventario ario: listInventario){
            Object[] datosario = new Object[]{ario.getInventarioID(), ario.getBodegaID(), ario.getProductoID(),ario.getCantidadInicial(), ario.getFecha(), ario.getMovimientosPositivos(), ario.getMovimientosNegativos(), ario.getNumerosDocumento(), ario.getSaldoFinal()};
            //asignamos un arreglo de objetos a una fila del modelo
            myData.addRow(datosario);
        }
        //Asignamos el modelo y/o coleccion de datos a la tabla
        jtablainv.setModel(myData);
    }
    
    private void filtrarTabla(){
       trsfiltro.setRowFilter(RowFilter.regexFilter(jtf_buscar.getText(),4));
    }
    
    private void limpiarCampos()
    {
        this.jtf_inventarioid.setText("");   
        this.cbBodega.setSelectedIndex(0);   
        this.cbProducto.setSelectedIndex(0);        
        this.jtf_cantinicial.setText("");
        this.jtf_fecha.setText("");
        this.jtf_movpos.setText("");
        this.jtf_movneg.setText("");
        this.jtf_numdocs.setText("");
        this.jtf_saldo.setText("");
   
    }
    
    private void fillProducto(){
        
        listpid = dtpid.listarProd();
        
        for(Producto pr: listpid){
            //llenar el combobox con los objetos de la lista
            
            this.cbProducto.addItem(pr);
            //this.jcb_locations.addItem(l.toString());        
    }
    
    }
    
    private int combop(){
        int fila = jtablainv.getSelectedRow();

        int size = 0; //Guarda la cantidad de elementos que hay en el jcombobx 
        int posP = 0;
        int idP = 0; 
        
        //Asignamos los valores a los campos del formulario
        
        //Obtenemos el id  del jtable
        idP = Integer.parseInt(this.jtablainv.getValueAt(fila, 2).toString());
        System.out.println("idP: "+idP);
  
        size = this.cbProducto.getItemCount(); //Obtenemos la cantidad de elementos contenidos en el jcombobox
        System.out.println("size: "+size);
        do{
            posP++;
            //tpc = (TipoCliente)this.jcb_tipoClienteID.getSelectedItem();
            pid = (Producto)this.cbProducto.getItemAt(posP);
            
            if(pid.getProductoID() == idP){
                //Selecciono el objeto del jcombobox
                this.cbProducto.setSelectedIndex(posP);
                System.out.println("pos: "+posP);
                break;
            }
            
        }
        while(posP<=size);
        
        return posP;

    } 
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton beditar;
    private javax.swing.JButton bguardar;
    private javax.swing.JButton bnuevo;
    private javax.swing.JButton bsuprimir;
    private javax.swing.JComboBox<Object> cbBodega;
    private javax.swing.JComboBox<Object> cbProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtablainv;
    private javax.swing.JTextField jtf_buscar;
    private javax.swing.JTextField jtf_cantinicial;
    private javax.swing.JTextField jtf_fecha;
    private javax.swing.JTextField jtf_inventarioid;
    private javax.swing.JTextField jtf_movneg;
    private javax.swing.JTextField jtf_movpos;
    private javax.swing.JTextField jtf_numdocs;
    private javax.swing.JTextField jtf_saldo;
    // End of variables declaration//GEN-END:variables
}
